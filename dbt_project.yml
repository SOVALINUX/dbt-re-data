name: "re_data"
version: "0.4.0"
config-version: 2

profile: "re_data_postgres"

model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["docs_blocks"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"
vars:
  re_data:max_columns_in_query: 10
  re_data:time_window_end: '{{ run_started_at.strftime("%Y-%m-%d 00:00:00") }}'
  re_data:time_window_start: '{{ (run_started_at - modules.datetime.timedelta(1)).strftime("%Y-%m-%d 00:00:00") }}'
  re_data:anomaly_detection_look_back_days: 30
  re_data:actively_monitored_by_default: false

  re_data:alerting_z_score: 3

  re_data:monitored: [] # overwritten by user config

  re_data:metrics_base:
    table:
      - row_count
      - freshness

    column:
      numeric:
        - min
        - max
        - avg
        - stddev
        - variance
        - nulls_count
        - nulls_percent
      text:
        - min_length
        - max_length
        - avg_length
        - nulls_count
        - missing_count
        - nulls_percent
        - missing_percent

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

require-dbt-version: [">=0.20.0", "<1.1.0"]

models:
  re_data:
    +schema: re
    enabled: false
    internal:
      +schema: re_internal
